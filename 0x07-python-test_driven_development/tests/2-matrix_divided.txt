Test cases for Divide a matrix
==============================

test a function that divides all elements of a matrix

Usage
=====

Importing function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

div is not integer or float
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, "string")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

div is 0
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

empty matrix
    >>> matrix = []
    >>> matrix_divided(matrix, 9)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

missing one argument
    >>> matrix_divided(matrix)
    Traceback (most recent call last):
    ....
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

missing both arg
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

matrix is not list
    >>> matrix = "string"
    >>> matrix_divided(matrix, 9)
    Traceback (most recent call last):
    ....
    TypeError: matrix must be a matrix (list of lists) of integers/floats

element in matrix is not a list
    >>> matrix = ["Not", "list", 4]
    >>> matrix_divided(matrix, 9)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix with floats/integers elements
    >>> matrix = [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> matrix_divided(matrix, 3)
    [[1, 2, 3], [4, 5, 6]]

matrix
    >>> matrix = [[3, “9”], [15, 3]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (array of arrays of integers/floats)
